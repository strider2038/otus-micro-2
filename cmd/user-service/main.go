/*
 * User Service
 *
 * This is simple client API
 *
 * API version: 1.0.0
 * Contact: schetinnikov@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"context"
	"log"
	"net/http"
	"os"

	"user-service/internal/api"
	"user-service/internal/postgres"
	"user-service/internal/postgres/database"

	"github.com/jackc/pgx/v4/pgxpool"
)

func main() {
	log.Printf("Server started")

	connection, err := pgxpool.Connect(context.Background(), os.Getenv("DATABASE_URL"))
	if err != nil {
		log.Fatal("failed to connect to postgres:", err)
	}
	err = connection.Ping(context.Background())
	if err != nil {
		log.Fatal("failed to ping postgres:", err)
	}
	db := database.New(connection)

	userRepository := postgres.NewUserRepository(db)
	userApiService := api.NewUserApiService(userRepository)
	userApiController := api.NewUserApiController(userApiService)

	router := api.NewRouter(userApiController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
